<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/cache
           http://www.springframework.org/schema/cache/spring-cache.xsd">

	<context:property-placeholder location="classpath:redis.properties" />

	<!-- 扫描文件（自动将servicec层注入） -->
	<context:component-scan base-package="org.dimhat.spring.redis" />

	<!-- 启用缓存注解功能，这个是必须的，否则注解不会生效，另外，该注解一定要声明在spring主配置文件中才会生效 -->
	<cache:annotation-driven cache-manager="cacheManager" />

	<!-- <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"> 
		<constructor-arg ref="redisTemplate" /> <property name="cacheNames"> <set> 
		<value>user</value> <value>user2</value> </set> </property> </bean> -->

	<!-- spring自己的换管理器，这里定义了两个缓存位置名称 ，既注解中的value 
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>-->
				<!-- 方式1：redis
				<bean class="org.dimhat.spring.redis.cache.RedisCache">
					<property name="redisTemplate" ref="redisTemplate" />
					<property name="name" value="user" />
				</bean>
				-->
				<!-- 方式2：基于 java.util.concurrent.ConcurrentHashMap 的一个内存缓存实现方案
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="user" />
				</bean>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="user2" />
				</bean>
				 --><!--
			</set>
		</property>
	</bean>
	-->
	
	<!-- 方式3：使用ehcache -->
	<bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">  
        <property name="configLocation" value="classpath:ehcache.xml" />  
    </bean>  
      
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">      
        <property name="cacheManager"  ref="cacheManagerFactory"/>      
    </bean>  


	<!-- 下面是redis的配置 -->
	<!-- 老版本属性值
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig"> 
		<property name="maxIdle" value="${redis.maxIdle}" /> 
		<property name="maxActive" value="${redis.maxActive}" /> 
		<property name="maxWait" value="${redis.maxWait}" /> 
		<property name="testOnBorrow" value="${redis.testOnBorrow}" /> 
	</bean> 
	-->
		
	<!-- 新版本属性值 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大保存idel状态对象数 -->
		<property name="maxIdle" value="${redis.maxIdle}" />
		<!-- 最大等待时间：单位ms -->
		<property name="maxWaitMillis" value="${redis.maxWait}" />
		<!-- 最大连接数：能够同时建立的最大链接个数 -->
		<property name="maxTotal" value="${redis.maxActive}" />
		<!-- 返回连接时，检测连接是否成功 -->
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<bean id="connectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.pass}" />
		<property name="poolConfig" ref="poolConfig" />
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>

</beans>  